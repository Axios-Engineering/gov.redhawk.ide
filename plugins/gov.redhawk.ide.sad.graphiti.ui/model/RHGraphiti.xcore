@Ecore(nsURI="http://www.redhawk.gov/model/rhgext/1.0.0")
@GenModel(prefix="RHGx", codeFormatting="true")
@GenModel(modelPluginVariables="org.eclipse.xtext.xbase.lib")
@GenModel(contentTypeIdentifier="http://www.redhawk.gov/model/rhgext/1.0.0")
@GenModel(operationReflection="false")
//prevents custom coding from getting blown away
@GenModel(modelDirectory="/gov.redhawk.ide.sad.graphiti.ui/src") 

package gov.redhawk.ide.sad.graphiti.ext

import gov.redhawk.ide.sad.graphiti.ui.diagram.patterns.AbstractContainerPattern
import org.eclipse.emf.ecore.EEList

type ComponentSupportedInterfaceStub wraps mil.jpeojtrs.sca.partitioning.ComponentSupportedInterfaceStub
type IFeatureProvider wraps org.eclipse.graphiti.features.IFeatureProvider
type UsesPortStub wraps mil.jpeojtrs.sca.partitioning.UsesPortStub
type ProvidesPortStub wraps mil.jpeojtrs.sca.partitioning.ProvidesPortStub
type Port wraps mil.jpeojtrs.sca.sad.Port
type AssemblyController wraps mil.jpeojtrs.sca.sad.AssemblyController
type ExternalPorts wraps mil.jpeojtrs.sca.sad.ExternalPorts
type Reason wraps org.eclipse.graphiti.features.impl.Reason
type List<Port> wraps java.util.List
type SadComponentInstantiation wraps mil.jpeojtrs.sca.sad.SadComponentInstantiation
type IAddContext wraps org.eclipse.graphiti.features.context.IAddContext
type AbstractContainerPattern wraps AbstractContainerPattern
type ComponentPattern wraps gov.redhawk.ide.sad.graphiti.ui.diagram.patterns.ComponentPattern
type IUpdateContext wraps org.eclipse.graphiti.features.context.IUpdateContext

interface ContainerShapeImpl wraps org.eclipse.graphiti.mm.pictograms.ContainerShape {}


class RHContainerShape extends org.eclipse.graphiti.mm.pictograms.ContainerShape {
	
	op void init(IAddContext context, AbstractContainerPattern pattern) 
	op void init(IAddContext context, AbstractContainerPattern pattern, List<Port> externalPorts)
	
	/*Returns providesPortsStubs business object list linked to getProvidesPortsContainerShape()*/
	op EEList<ProvidesPortStub> getProvidesPortStubs()

	
	/*performs a layout on the contents of this shape */
	op void layout()
	
	/*Updates the shape with supplied values */
	op Reason update(IUpdateContext context, AbstractContainerPattern pattern, List<Port> externalPorts) 
	
	
	/*Updates the shape with supplied values */
	op Reason update(IUpdateContext context, AbstractContainerPattern pattern) 
		  
	/*Checks if shape requires an update.  
	 * If update required returns Reason with true
	 * boolean value and message describing what needs to be updated
	 */
	op Reason updateNeeded(IUpdateContext context, AbstractContainerPattern pattern, List<Port> externalPorts)
		  
	/*Checks if shape requires an update.  
	 * If update required returns Reason with true
	 * boolean value and message describing what needs to be updated
	 */
	op Reason updateNeeded(IUpdateContext context, AbstractContainerPattern pattern)
	
}

class ComponentShape extends RHContainerShape{
	
	op void init(IAddContext context, ComponentPattern pattern) 

	/*performs a layout on the contents of this shape */
	op void layout()
	
	/*Updates the shape with supplied values */
	op Reason update(IUpdateContext context, ComponentPattern pattern) 
	
	/*Checks if shape requires an update.  
	 * If update required returns Reason with true
	 * boolean value and message describing what needs to be updated
	 */
	 op Reason updateNeeded(IUpdateContext context, ComponentPattern pattern)
}